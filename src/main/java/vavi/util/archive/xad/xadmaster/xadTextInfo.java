package vavi.util.archive.xad.xadmaster;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * NOTE: the texts passed with that structure must not always be printable.<br>
 * Although the clients should add an additional (not counted) zero at the text<br>
 * end, the whole file may contain other unprintable stuff (e.g. for DMS).<br>
 * So when printing this texts do it on a byte for byte base including<br>
 * printability checks.<br>
 * <i>native declaration : /Frameworks/XADMaster.framework/Versions/A/Headers/xadmaster.h:522</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xadTextInfo extends Structure {
	/** C type : xadTextInfo* */
	public xadTextInfo.ByReference xti_Next;
	/**
	 * maybe zero - no text - e.g. when crypted<br>
	 * C type : xadSize
	 */
	public long xti_Size;
	/**
	 * and there is no password in xadGetInfo()<br>
	 * C type : xadSTRPTR
	 */
	public Pointer xti_Text;
	/**
	 * see XADTIF_xxx defines<br>
	 * C type : xadUINT32
	 */
	public int xti_Flags;
	public xadTextInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("xti_Next", "xti_Size", "xti_Text", "xti_Flags");
	}
	/**
	 * @param xti_Next C type : xadTextInfo*<br>
	 * @param xti_Size maybe zero - no text - e.g. when crypted<br>
	 * C type : xadSize<br>
	 * @param xti_Text and there is no password in xadGetInfo()<br>
	 * C type : xadSTRPTR<br>
	 * @param xti_Flags see XADTIF_xxx defines<br>
	 * C type : xadUINT32
	 */
	public xadTextInfo(xadTextInfo.ByReference xti_Next, long xti_Size, Pointer xti_Text, int xti_Flags) {
		super();
		this.xti_Next = xti_Next;
		this.xti_Size = xti_Size;
		this.xti_Text = xti_Text;
		this.xti_Flags = xti_Flags;
	}
	public xadTextInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xadTextInfo implements Structure.ByReference {
	}
	public static class ByValue extends xadTextInfo implements Structure.ByValue {
	}
}
