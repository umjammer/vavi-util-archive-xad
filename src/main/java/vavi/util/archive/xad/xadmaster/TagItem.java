package vavi.util.archive.xad.xadmaster;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /Frameworks/XADMaster.framework/Versions/A/Headers/xadmaster.h:30</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagItem extends Structure {
	/** C type : xadTag */
	public int ti_Tag;
	/** C type : xadSize */
	public long ti_Data;
	public TagItem() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ti_Tag", "ti_Data");
	}
	/**
	 * @param ti_Tag C type : xadTag<br>
	 * @param ti_Data C type : xadSize
	 */
	public TagItem(int ti_Tag, long ti_Data) {
		super();
		this.ti_Tag = ti_Tag;
		this.ti_Data = ti_Data;
	}
	public TagItem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagItem implements Structure.ByReference {
		
	};
	public static class ByValue extends TagItem implements Structure.ByValue {
		
	};
}
