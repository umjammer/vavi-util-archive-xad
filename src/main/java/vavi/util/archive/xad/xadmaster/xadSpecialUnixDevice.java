package vavi.util.archive.xad.xadmaster;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * These are used for xfi_FileType to define file type. (V11)<br>
 * <i>native declaration : /Frameworks/XADMaster.framework/Versions/A/Headers/xadmaster.h:420</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xadSpecialUnixDevice extends Structure {
	/**
	 * major device version<br>
	 * C type : xadUINT32
	 */
	public int xfis_MajorVersion;
	/**
	 * minor device version<br>
	 * C type : xadUINT32
	 */
	public int xfis_MinorVersion;
	public xadSpecialUnixDevice() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("xfis_MajorVersion", "xfis_MinorVersion");
	}
	/**
	 * @param xfis_MajorVersion major device version<br>
	 * C type : xadUINT32<br>
	 * @param xfis_MinorVersion minor device version<br>
	 * C type : xadUINT32
	 */
	public xadSpecialUnixDevice(int xfis_MajorVersion, int xfis_MinorVersion) {
		super();
		this.xfis_MajorVersion = xfis_MajorVersion;
		this.xfis_MinorVersion = xfis_MinorVersion;
	}
	public xadSpecialUnixDevice(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xadSpecialUnixDevice implements Structure.ByReference {
	}
	public static class ByValue extends xadSpecialUnixDevice implements Structure.ByValue {
	}
}
