package vavi.util.archive.xad.xadmaster;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * for XAD_OUTDEVICE tag<br>
 * <i>native declaration : /Frameworks/XADMaster.framework/Versions/A/Headers/xadmaster.h:267</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xadDeviceInfo extends Structure {
	/**
	 * name of device<br>
	 * C type : xadSTRPTR
	 */
	public Pointer xdi_DeviceName;
	/**
	 * unit of device<br>
	 * C type : xadUINT32
	 */
	public int xdi_Unit;
	/**
	 * instead of Device+Unit, dos name without ':'<br>
	 * C type : xadSTRPTR
	 */
	public Pointer xdi_DOSName;
	public xadDeviceInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("xdi_DeviceName", "xdi_Unit", "xdi_DOSName");
	}
	/**
	 * @param xdi_DeviceName name of device<br>
	 * C type : xadSTRPTR<br>
	 * @param xdi_Unit unit of device<br>
	 * C type : xadUINT32<br>
	 * @param xdi_DOSName instead of Device+Unit, dos name without ':'<br>
	 * C type : xadSTRPTR
	 */
	public xadDeviceInfo(Pointer xdi_DeviceName, int xdi_Unit, Pointer xdi_DOSName) {
		super();
		this.xdi_DeviceName = xdi_DeviceName;
		this.xdi_Unit = xdi_Unit;
		this.xdi_DOSName = xdi_DOSName;
	}
	public xadDeviceInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xadDeviceInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends xadDeviceInfo implements Structure.ByValue {
		
	};
}
